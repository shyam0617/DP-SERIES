problem link:
https://www.geeksforgeeks.org/problems/geek-jump/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=geek-jump
solution:
class Solution{
    
    public int find(int arr[],int n,int dp[])
    {
        if(n<=0)
        return 0;
        if(dp[n]!=-1)
        return dp[n];
        int one=find(arr,n-1,dp)+Math.abs(arr[n]-arr[n-1]);
        int two=Integer.MAX_VALUE;
        if(n>1)
        two=find(arr,n-2,dp)+Math.abs(arr[n]-arr[n-2]);
        
        return dp[n]=Math.min(one,two);
        
    }
    public int minimumEnergy(int arr[],int N){
        //code here
        int dp[]=new int[N];
        Arrays.fill(dp,-1);
        
        int ans=find(arr,N-1,dp);
        return ans;
        // *****************************Tabulation*******************
        dp[0]=0;
        for(int i=1;i<N;i++)
        {
            int one=dp[i-1]+Math.abs(arr[i]-arr[i-1]);
            int two=Integer.MAX_VALUE;
            if(i>1)
            two=dp[i-2]+Math.abs(arr[i]-arr[i-2]);
            
            dp[i]=Math.min(one,two);
        }
        return dp[N-1];
        *************************************************************
       
    }
}
